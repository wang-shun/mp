/**
 * Base class for the all the back bone views generated by the application
 * Holds the common functions and implementation for all or more than one 
 * views that can be via this application 
 * 
 * @author Terry 
 */
define(["backbone", "util/progressbar", "util/constants", "util/uiRanderUtil", "require"],
	function(Backbone, ProgressBar, Constants, UiRanderUtil, require) {
		var BaseView = Backbone.View.extend({
			viewType: 'BaseView',
			/** constants. */
			constants: Constants,
			/** UI plugin rander. */
			uiRanderUtil: UiRanderUtil,
			/**
			 * get app Obj.
			 */
			getAppContext: function() {
				return require("app").getInstance();
			},
			/**
			 * view previous render function, provide an option which an call before view render.
			 */
			preRender: function() {
				return this;
			},
			/**
			 * view render function.
			 */
			render: function() {
				return this;
			},
			/**
			 * view destory function. definition the behaviors when we destory thie view.
			 */
			destroy: function() {
				this.undelegateEvents();
				this.remove();
			},
			/**
			 * view refresh function, definition the behaviors when we refresh thie view.
			 */
			refresh: function() {},
			/**
			 * show loading widget.
			 *
			 * @param containerSID : the loading widget container SID.
			 */
			showLoading: function(containerSID) {
				if (arguments.length == 0) {
					ProgressBar.start(this);
				} else {
					ProgressBar.start(this, containerSID);
				}
			},
			/**
			 * hide loading widget
			 *
			 * @param containerSID : the loading widget container SID.
			 */
			hideLoading: function(containerSID) {
				if (arguments.length == 0) {
					ProgressBar.stop(this);
				} else {
					ProgressBar.stop(this, containerSID);
				}
			}
		});

		return BaseView;
	}
);