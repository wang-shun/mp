servicemanager:
  endpoint: http://sm.mapps.ip:8761

eureka:
  client:
    enabled: true
    region: mapps
    serviceUrl:
      defaultZone: ${servicemanager.endpoint}/eureka
    healthcheck:
      enabled: true
  instance:
    instanceId: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port} ##${spring.application.name}:${spring.application.instance_id:${random.value}}
    preferIpAddress: true  
    metadataMap:
      appName: 应用网关                         # 应用名称
      logo: /logo.png                    # 应用logo 
      remarks: 微服务网关                             # 应用描述
      portal:                                   # 自服务门户集成入口
      mgr-port: ${management.port}       # 管理端口
      mgr-context-path: ${management.context-path}
      configProperties:                         # 配置属性
        - key: zuul.max.host.connections               # 属性key
          name: 最大连接数                              #属性名称  
          type: text                              #类型，text,radio,checkbox           
          remark: 网关允许的最大连接数                     #说明
          size: 5                               #值列长度 
          options:                                #radio或者checkbox时的选项，可为空
          regex: "[0-9]+"                                 #校验正则表达式
          group: 通用设置                         #通用设置
          default: 500                          #缺省值 
        - key: gateway.token.timeout               # 属性key
          name: access_token的超时时间，单位秒                              #属性名称  
          type: text                              #类型，text,radio,checkbox           
          remark: 生成的access_token的超时时间，单位秒                     #说明
          size: 5                               #值列长度 
          options:                                #radio或者checkbox时的选项，可为空
          regex: "[0-9]+"                                 #校验正则表达式
          group: 通用设置                         #通用设置
          default: 7200                          #缺省值                 
      dependencies:                             # 依赖声明
        services:                               # 依赖的服务，id，逗号分隔
        resources:                              # 依赖的资源
          redis: default
          
      
spring:
  application:
    name: mapps-gateway   
# redis config
  redis:
    database: ${resources.redis.default.dbIndex:0} # Redis数据库索引（默认为0）
    host: ${resources.redis.default.host:127.0.0.1}
    port: ${resources.redis.default.port:6379}
    password: ${resources.redis.default.password:}   # Redis服务器连接密码（默认为空）
    pool:
      max-active: 5 # 连接池最大连接数（使用负值表示没有限制）
      max-waite: 60 # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 2 # 连接池中的最大空闲连接
      min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000 # 连接超时时间（毫秒）    
  http:
    multipart:
      max-file-size: 1MB
      max-request-size: 10MB  
  cloud:
    loadbalancer:
      retry: 
        enabled: true  
  sleuth:
    rxjava:
      schedulers:
        hook:
          enabled: false    # 禁用rxjava trace
    sampler:
      percentage: 0.1       # 采样比例，10%，默认           
      
api:
  endpoint: /api  

gateway: 
  token:
    timeout: 7200    # 生成的access_token的超时时间，单位秒
  security:
    key: MY_kEY_x12  

zuul:
  max:
    host:
      connections: 500
  sensitiveHeaders: Authorization
  add-host-header: true
  host:
    connect-timeout-millis: 5000
    socket-timeout-millis: 10000
  debug:
    request: false
    
ribbon:
  ReadTimeout: 1800000         # 数据读取超时时间
  ConnectTimeout: 180000       # 连接超时时间
  MaxAutoRetries: 0          # Same Server最大重试次数
  MaxAutoRetriesNextServer: 1    # 
  ServerListRefreshInterval: 30000 # 服务器列表自动刷新时间
  OkToRetryOnAllOperations: true
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule 
    
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 200000   # 断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试 
            
server:
  port: 8762
  
management:
  context-path: /__mng__
  port: 38301
  security: 
    enabled: false
  
endpoints:
  restart:
    enabled: true
  #health:
  #  enabled: true  
  
logging:
  level: 
    org:
      springframework:
        retry: INFO
        cloud: 
          netflix: INFO
          sleuth: DEBUG 
    com:
      netflix: INFO  
      fiberhome:
        mapps:
          gateway: DEBUG
            
  path: logs
